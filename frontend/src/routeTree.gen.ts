/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as CartImport } from './routes/cart'
import { Route as MarketIndexImport } from './routes/market/index'
import { Route as MarketProductIdImport } from './routes/market/$productId'

// Create Virtual Routes

const ContactoLazyImport = createFileRoute('/contacto')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const ContactoLazyRoute = ContactoLazyImport.update({
  id: '/contacto',
  path: '/contacto',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/contacto.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const CartRoute = CartImport.update({
  id: '/cart',
  path: '/cart',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const MarketIndexRoute = MarketIndexImport.update({
  id: '/market/',
  path: '/market/',
  getParentRoute: () => rootRoute,
} as any)

const MarketProductIdRoute = MarketProductIdImport.update({
  id: '/market/$productId',
  path: '/market/$productId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/cart': {
      id: '/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/contacto': {
      id: '/contacto'
      path: '/contacto'
      fullPath: '/contacto'
      preLoaderRoute: typeof ContactoLazyImport
      parentRoute: typeof rootRoute
    }
    '/market/$productId': {
      id: '/market/$productId'
      path: '/market/$productId'
      fullPath: '/market/$productId'
      preLoaderRoute: typeof MarketProductIdImport
      parentRoute: typeof rootRoute
    }
    '/market/': {
      id: '/market/'
      path: '/market'
      fullPath: '/market'
      preLoaderRoute: typeof MarketIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/cart': typeof CartRoute
  '/about': typeof AboutLazyRoute
  '/contacto': typeof ContactoLazyRoute
  '/market/$productId': typeof MarketProductIdRoute
  '/market': typeof MarketIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/cart': typeof CartRoute
  '/about': typeof AboutLazyRoute
  '/contacto': typeof ContactoLazyRoute
  '/market/$productId': typeof MarketProductIdRoute
  '/market': typeof MarketIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/cart': typeof CartRoute
  '/about': typeof AboutLazyRoute
  '/contacto': typeof ContactoLazyRoute
  '/market/$productId': typeof MarketProductIdRoute
  '/market/': typeof MarketIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/cart'
    | '/about'
    | '/contacto'
    | '/market/$productId'
    | '/market'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/cart' | '/about' | '/contacto' | '/market/$productId' | '/market'
  id:
    | '__root__'
    | '/'
    | '/cart'
    | '/about'
    | '/contacto'
    | '/market/$productId'
    | '/market/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  CartRoute: typeof CartRoute
  AboutLazyRoute: typeof AboutLazyRoute
  ContactoLazyRoute: typeof ContactoLazyRoute
  MarketProductIdRoute: typeof MarketProductIdRoute
  MarketIndexRoute: typeof MarketIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  CartRoute: CartRoute,
  AboutLazyRoute: AboutLazyRoute,
  ContactoLazyRoute: ContactoLazyRoute,
  MarketProductIdRoute: MarketProductIdRoute,
  MarketIndexRoute: MarketIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/cart",
        "/about",
        "/contacto",
        "/market/$productId",
        "/market/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/cart": {
      "filePath": "cart.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/contacto": {
      "filePath": "contacto.lazy.tsx"
    },
    "/market/$productId": {
      "filePath": "market/$productId.tsx"
    },
    "/market/": {
      "filePath": "market/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
